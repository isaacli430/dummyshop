{"ast":null,"code":"/**\n * @name ranges-push\n * @fileoverview Gather string index ranges\n * @version 7.0.10\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-push/}\n */\n\nimport { collWhitespace as m } from \"string-collapse-leading-whitespace\";\nimport { existy as a, isStr as u, isInt as g } from \"codsen-utils\";\nimport { rSort as c } from \"ranges-sort\";\nvar d = \"7.0.10\";\nvar f = {\n  mergeType: 1,\n  progressFn: null,\n  joinRangesThatTouchEdges: !0\n};\nfunction $(p, t) {\n  function r(e) {\n    return !!e && typeof e == \"object\" && !Array.isArray(e);\n  }\n  if (!Array.isArray(p) || !p.length) return null;\n  let s;\n  if (t) {\n    if (r(t)) {\n      if (s = {\n        ...f,\n        ...t\n      }, s.progressFn && r(s.progressFn) && !Object.keys(s.progressFn).length) s.progressFn = null;else if (s.progressFn && typeof s.progressFn != \"function\") throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: \"${typeof s.progressFn}\", equal to ${JSON.stringify(s.progressFn, null, 4)}`);\n      if (![1, 2, \"1\", \"2\"].includes(s.mergeType)) throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof s.mergeType}\", equal to ${JSON.stringify(s.mergeType, null, 4)}`);\n      if (typeof s.joinRangesThatTouchEdges != \"boolean\") throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof s.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(s.joinRangesThatTouchEdges, null, 4)}`);\n    } else throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t, null, 4)} (type ${typeof t})`);\n  } else s = {\n    ...f\n  };\n  let i = p.filter(e => Array.isArray(e)).map(e => [...e]).filter(e => e[2] !== void 0 || e[0] !== e[1]),\n    n,\n    o,\n    l;\n  s.progressFn ? n = c(i, {\n    progressFn: e => {\n      l = Math.floor(e / 5), l !== o && (o = l, s.progressFn(l));\n    }\n  }) : n = c(i);\n  let h = n.length - 1;\n  for (let e = h; e > 0; e--) s.progressFn && (l = Math.floor((1 - e / h) * 78) + 21, l !== o && l > o && (o = l, s.progressFn(l))), (n[e][0] <= n[e - 1][0] || !s.joinRangesThatTouchEdges && n[e][0] < n[e - 1][1] || s.joinRangesThatTouchEdges && n[e][0] <= n[e - 1][1]) && (n[e - 1][0] = Math.min(n[e][0], n[e - 1][0]), n[e - 1][1] = Math.max(n[e][1], n[e - 1][1]), n[e][2] !== void 0 && (n[e - 1][0] >= n[e][0] || n[e - 1][1] <= n[e][1]) && n[e - 1][2] !== null && (n[e][2] === null && n[e - 1][2] !== null ? n[e - 1][2] = null : n[e - 1][2] != null ? +s.mergeType == 2 && n[e - 1][0] === n[e][0] ? n[e - 1][2] = n[e][2] : n[e - 1][2] += n[e][2] : n[e - 1][2] = n[e][2]), n.splice(e, 1), e = n.length);\n  return n.length ? n : null;\n}\nvar v = d,\n  R = {\n    limitToBeAddedWhitespace: !1,\n    limitLinebreaksCount: 1,\n    mergeType: 1\n  },\n  y = class {\n    constructor(t) {\n      let r = {\n        ...R,\n        ...t\n      };\n      if (r.mergeType && r.mergeType !== 1 && r.mergeType !== 2) if (u(r.mergeType) && r.mergeType.trim() === \"1\") r.mergeType = 1;else if (u(r.mergeType) && r.mergeType.trim() === \"2\") r.mergeType = 2;else throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof r.mergeType}\", equal to ${JSON.stringify(r.mergeType, null, 4)}`);\n      this.opts = r, this.ranges = [];\n    }\n    ranges;\n    opts;\n    add(t, r, s) {\n      if (t == null && r == null) return;\n      if (a(t) && !a(r)) {\n        if (Array.isArray(t)) {\n          if (t.length) {\n            if (t.some(o => Array.isArray(o))) {\n              t.forEach(o => {\n                Array.isArray(o) && this.add(...o);\n              });\n              return;\n            }\n            t.length && g(+t[0]) && g(+t[1]) && this.add(...t);\n          }\n          return;\n        }\n        throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, \"from\" is set (${JSON.stringify(t, null, 0)}) but second-one, \"to\" is not (${JSON.stringify(r, null, 0)})`);\n      } else if (!a(t) && a(r)) throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, \"to\" is set (${JSON.stringify(r, null, 0)}) but first-one, \"from\" is not (${JSON.stringify(t, null, 0)})`);\n      let i = +t,\n        n = +r;\n      if (g(s) && (s = String(s)), g(i) && g(n)) {\n        if (a(s) && !u(s) && !g(s)) throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof s}, equal to:\n${JSON.stringify(s, null, 4)}`);\n        if (a(this.ranges) && Array.isArray(this.last()) && i === this.last()[1]) {\n          if (this.last()[1] = n, this.last()[2], this.last()[2] !== null && a(s)) {\n            let o = this.last()[2] && this.last()[2].length && (!this.opts?.mergeType || this.opts.mergeType === 1) ? `${this.last()[2]}${s}` : s;\n            this.opts.limitToBeAddedWhitespace && (o = m(o, this.opts.limitLinebreaksCount)), u(o) && !o.length || (this.last()[2] = o);\n          }\n        } else {\n          this.ranges || (this.ranges = []);\n          let o = s !== void 0 && !(u(s) && !s.length) ? [i, n, s && this.opts.limitToBeAddedWhitespace ? m(s, this.opts.limitLinebreaksCount) : s] : [i, n];\n          this.ranges.push(o);\n        }\n      } else throw g(i) && i >= 0 ? new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] \"to\" value, the second input argument, must be a natural number or zero! Currently it's of a type \"${typeof n}\" equal to: ${JSON.stringify(n, null, 4)}`) : new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] \"from\" value, the first input argument, must be a natural number or zero! Currently it's of a type \"${typeof i}\" equal to: ${JSON.stringify(i, null, 4)}`);\n    }\n    push(t, r, s) {\n      this.add(t, r, s);\n    }\n    current() {\n      return Array.isArray(this.ranges) && this.ranges.length ? (this.ranges = $(this.ranges, {\n        mergeType: this.opts.mergeType\n      }), this.ranges && this.opts.limitToBeAddedWhitespace ? this.ranges.map(t => a(t[2]) ? [t[0], t[1], m(t[2], this.opts.limitLinebreaksCount)] : t) : this.ranges) : null;\n    }\n    wipe() {\n      this.ranges = [];\n    }\n    replace(t) {\n      if (Array.isArray(t) && t.length) {\n        if (Array.isArray(t[0]) && g(t[0][0])) this.ranges = Array.from(t);else throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0], null, 4)} should be an array and its first element should be an integer, a string index.`);\n      } else this.ranges = [];\n    }\n    last() {\n      return Array.isArray(this.ranges) && this.ranges.length ? this.ranges[this.ranges.length - 1] : null;\n    }\n  };\nexport { y as Ranges, R as defaults, v as version };","map":{"version":3,"names":["collWhitespace","m","existy","a","isStr","u","isInt","g","rSort","c","d","f","mergeType","progressFn","joinRangesThatTouchEdges","$","p","t","r","e","Array","isArray","length","s","Object","keys","Error","JSON","stringify","includes","i","filter","map","n","o","l","Math","floor","h","min","max","splice","v","R","limitToBeAddedWhitespace","limitLinebreaksCount","y","constructor","trim","opts","ranges","add","some","forEach","TypeError","String","last","push","current","wipe","replace","from","Ranges","defaults","version"],"sources":["/Users/isaacli/Desktop/MCI/dummyshop/node_modules/ranges-push/dist/ranges-push.esm.js"],"sourcesContent":["/**\n * @name ranges-push\n * @fileoverview Gather string index ranges\n * @version 7.0.10\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-push/}\n */\n\nimport{collWhitespace as m}from\"string-collapse-leading-whitespace\";import{existy as a,isStr as u,isInt as g}from\"codsen-utils\";import{rSort as c}from\"ranges-sort\";var d=\"7.0.10\";var f={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function $(p,t){function r(e){return!!e&&typeof e==\"object\"&&!Array.isArray(e)}if(!Array.isArray(p)||!p.length)return null;let s;if(t)if(r(t)){if(s={...f,...t},s.progressFn&&r(s.progressFn)&&!Object.keys(s.progressFn).length)s.progressFn=null;else if(s.progressFn&&typeof s.progressFn!=\"function\")throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: \"${typeof s.progressFn}\", equal to ${JSON.stringify(s.progressFn,null,4)}`);if(![1,2,\"1\",\"2\"].includes(s.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof s.mergeType}\", equal to ${JSON.stringify(s.mergeType,null,4)}`);if(typeof s.joinRangesThatTouchEdges!=\"boolean\")throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: \"${typeof s.joinRangesThatTouchEdges}\", equal to ${JSON.stringify(s.joinRangesThatTouchEdges,null,4)}`)}else throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(t,null,4)} (type ${typeof t})`);else s={...f};let i=p.filter(e=>Array.isArray(e)).map(e=>[...e]).filter(e=>e[2]!==void 0||e[0]!==e[1]),n,o,l;s.progressFn?n=c(i,{progressFn:e=>{l=Math.floor(e/5),l!==o&&(o=l,s.progressFn(l))}}):n=c(i);let h=n.length-1;for(let e=h;e>0;e--)s.progressFn&&(l=Math.floor((1-e/h)*78)+21,l!==o&&l>o&&(o=l,s.progressFn(l))),(n[e][0]<=n[e-1][0]||!s.joinRangesThatTouchEdges&&n[e][0]<n[e-1][1]||s.joinRangesThatTouchEdges&&n[e][0]<=n[e-1][1])&&(n[e-1][0]=Math.min(n[e][0],n[e-1][0]),n[e-1][1]=Math.max(n[e][1],n[e-1][1]),n[e][2]!==void 0&&(n[e-1][0]>=n[e][0]||n[e-1][1]<=n[e][1])&&n[e-1][2]!==null&&(n[e][2]===null&&n[e-1][2]!==null?n[e-1][2]=null:n[e-1][2]!=null?+s.mergeType==2&&n[e-1][0]===n[e][0]?n[e-1][2]=n[e][2]:n[e-1][2]+=n[e][2]:n[e-1][2]=n[e][2]),n.splice(e,1),e=n.length);return n.length?n:null}var v=d,R={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},y=class{constructor(t){let r={...R,...t};if(r.mergeType&&r.mergeType!==1&&r.mergeType!==2)if(u(r.mergeType)&&r.mergeType.trim()===\"1\")r.mergeType=1;else if(u(r.mergeType)&&r.mergeType.trim()===\"2\")r.mergeType=2;else throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: \"${typeof r.mergeType}\", equal to ${JSON.stringify(r.mergeType,null,4)}`);this.opts=r,this.ranges=[]}ranges;opts;add(t,r,s){if(t==null&&r==null)return;if(a(t)&&!a(r)){if(Array.isArray(t)){if(t.length){if(t.some(o=>Array.isArray(o))){t.forEach(o=>{Array.isArray(o)&&this.add(...o)});return}t.length&&g(+t[0])&&g(+t[1])&&this.add(...t)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, \"from\" is set (${JSON.stringify(t,null,0)}) but second-one, \"to\" is not (${JSON.stringify(r,null,0)})`)}else if(!a(t)&&a(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, \"to\" is set (${JSON.stringify(r,null,0)}) but first-one, \"from\" is not (${JSON.stringify(t,null,0)})`);let i=+t,n=+r;if(g(s)&&(s=String(s)),g(i)&&g(n)){if(a(s)&&!u(s)&&!g(s))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof s}, equal to:\n${JSON.stringify(s,null,4)}`);if(a(this.ranges)&&Array.isArray(this.last())&&i===this.last()[1]){if(this.last()[1]=n,this.last()[2],this.last()[2]!==null&&a(s)){let o=this.last()[2]&&this.last()[2].length&&(!this.opts?.mergeType||this.opts.mergeType===1)?`${this.last()[2]}${s}`:s;this.opts.limitToBeAddedWhitespace&&(o=m(o,this.opts.limitLinebreaksCount)),u(o)&&!o.length||(this.last()[2]=o)}}else{this.ranges||(this.ranges=[]);let o=s!==void 0&&!(u(s)&&!s.length)?[i,n,s&&this.opts.limitToBeAddedWhitespace?m(s,this.opts.limitLinebreaksCount):s]:[i,n];this.ranges.push(o)}}else throw g(i)&&i>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] \"to\" value, the second input argument, must be a natural number or zero! Currently it's of a type \"${typeof n}\" equal to: ${JSON.stringify(n,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] \"from\" value, the first input argument, must be a natural number or zero! Currently it's of a type \"${typeof i}\" equal to: ${JSON.stringify(i,null,4)}`)}push(t,r,s){this.add(t,r,s)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=$(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(t=>a(t[2])?[t[0],t[1],m(t[2],this.opts.limitLinebreaksCount)]:t):this.ranges):null}wipe(){this.ranges=[]}replace(t){if(Array.isArray(t)&&t.length)if(Array.isArray(t[0])&&g(t[0][0]))this.ranges=Array.from(t);else throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0],null,4)} should be an array and its first element should be an integer, a string index.`);else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}};export{y as Ranges,R as defaults,v as version};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOA,cAAc,IAAIC,CAAC,QAAK,oCAAoC;AAAC,SAAOC,MAAM,IAAIC,CAAC,EAACC,KAAK,IAAIC,CAAC,EAACC,KAAK,IAAIC,CAAC,QAAK,cAAc;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,aAAa;AAAC,IAAIC,CAAC,GAAC,QAAQ;AAAC,IAAIC,CAAC,GAAC;EAACC,SAAS,EAAC,CAAC;EAACC,UAAU,EAAC,IAAI;EAACC,wBAAwB,EAAC,CAAC;AAAC,CAAC;AAAC,SAASC,CAACA,CAACC,CAAC,EAACC,CAAC,EAAC;EAAC,SAASC,CAACA,CAACC,CAAC,EAAC;IAAC,OAAM,CAAC,CAACA,CAAC,IAAE,OAAOA,CAAC,IAAE,QAAQ,IAAE,CAACC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC;EAAA;EAAC,IAAG,CAACC,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,IAAE,CAACA,CAAC,CAACM,MAAM,EAAC,OAAO,IAAI;EAAC,IAAIC,CAAC;EAAC,IAAGN,CAAC;IAAC,IAAGC,CAAC,CAACD,CAAC,CAAC,EAAC;MAAC,IAAGM,CAAC,GAAC;QAAC,GAAGZ,CAAC;QAAC,GAAGM;MAAC,CAAC,EAACM,CAAC,CAACV,UAAU,IAAEK,CAAC,CAACK,CAAC,CAACV,UAAU,CAAC,IAAE,CAACW,MAAM,CAACC,IAAI,CAACF,CAAC,CAACV,UAAU,CAAC,CAACS,MAAM,EAACC,CAAC,CAACV,UAAU,GAAC,IAAI,CAAC,KAAK,IAAGU,CAAC,CAACV,UAAU,IAAE,OAAOU,CAAC,CAACV,UAAU,IAAE,UAAU,EAAC,MAAM,IAAIa,KAAK,CAAE,oGAAmG,OAAOH,CAAC,CAACV,UAAW,eAAcc,IAAI,CAACC,SAAS,CAACL,CAAC,CAACV,UAAU,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;MAAC,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,GAAG,CAAC,CAACgB,QAAQ,CAACN,CAAC,CAACX,SAAS,CAAC,EAAC,MAAM,IAAIc,KAAK,CAAE,gHAA+G,OAAOH,CAAC,CAACX,SAAU,eAAce,IAAI,CAACC,SAAS,CAACL,CAAC,CAACX,SAAS,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;MAAC,IAAG,OAAOW,CAAC,CAACT,wBAAwB,IAAE,SAAS,EAAC,MAAM,IAAIY,KAAK,CAAE,+HAA8H,OAAOH,CAAC,CAACT,wBAAyB,eAAca,IAAI,CAACC,SAAS,CAACL,CAAC,CAACT,wBAAwB,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;IAAA,CAAC,MAAK,MAAM,IAAIY,KAAK,CAAE;AAClwC,EAAEC,IAAI,CAACC,SAAS,CAACX,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,UAAS,OAAOA,CAAE,GAAE,CAAC;EAAC,OAAKM,CAAC,GAAC;IAAC,GAAGZ;EAAC,CAAC;EAAC,IAAImB,CAAC,GAACd,CAAC,CAACe,MAAM,CAACZ,CAAC,IAAEC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,CAAC,CAACa,GAAG,CAACb,CAAC,IAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAACY,MAAM,CAACZ,CAAC,IAAEA,CAAC,CAAC,CAAC,CAAC,KAAG,KAAK,CAAC,IAAEA,CAAC,CAAC,CAAC,CAAC,KAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;IAACc,CAAC;IAACC,CAAC;IAACC,CAAC;EAACZ,CAAC,CAACV,UAAU,GAACoB,CAAC,GAACxB,CAAC,CAACqB,CAAC,EAAC;IAACjB,UAAU,EAACM,CAAC,IAAE;MAACgB,CAAC,GAACC,IAAI,CAACC,KAAK,CAAClB,CAAC,GAAC,CAAC,CAAC,EAACgB,CAAC,KAAGD,CAAC,KAAGA,CAAC,GAACC,CAAC,EAACZ,CAAC,CAACV,UAAU,CAACsB,CAAC,CAAC,CAAC;IAAA;EAAC,CAAC,CAAC,GAACF,CAAC,GAACxB,CAAC,CAACqB,CAAC,CAAC;EAAC,IAAIQ,CAAC,GAACL,CAAC,CAACX,MAAM,GAAC,CAAC;EAAC,KAAI,IAAIH,CAAC,GAACmB,CAAC,EAACnB,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAACI,CAAC,CAACV,UAAU,KAAGsB,CAAC,GAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAClB,CAAC,GAACmB,CAAC,IAAE,EAAE,CAAC,GAAC,EAAE,EAACH,CAAC,KAAGD,CAAC,IAAEC,CAAC,GAACD,CAAC,KAAGA,CAAC,GAACC,CAAC,EAACZ,CAAC,CAACV,UAAU,CAACsB,CAAC,CAAC,CAAC,CAAC,EAAC,CAACF,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAACI,CAAC,CAACT,wBAAwB,IAAEmB,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEI,CAAC,CAACT,wBAAwB,IAAEmB,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAIc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAACiB,IAAI,CAACG,GAAG,CAACN,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAACiB,IAAI,CAACI,GAAG,CAACP,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,KAAK,CAAC,KAAGc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,KAAGc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,IAAEc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,IAAI,GAAC,CAACI,CAAC,CAACX,SAAS,IAAE,CAAC,IAAEqB,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAGc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAACc,CAAC,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACc,CAAC,CAACQ,MAAM,CAACtB,CAAC,EAAC,CAAC,CAAC,EAACA,CAAC,GAACc,CAAC,CAACX,MAAM,CAAC;EAAC,OAAOW,CAAC,CAACX,MAAM,GAACW,CAAC,GAAC,IAAI;AAAA;AAAC,IAAIS,CAAC,GAAChC,CAAC;EAACiC,CAAC,GAAC;IAACC,wBAAwB,EAAC,CAAC,CAAC;IAACC,oBAAoB,EAAC,CAAC;IAACjC,SAAS,EAAC;EAAC,CAAC;EAACkC,CAAC,GAAC,MAAK;IAACC,WAAWA,CAAC9B,CAAC,EAAC;MAAC,IAAIC,CAAC,GAAC;QAAC,GAAGyB,CAAC;QAAC,GAAG1B;MAAC,CAAC;MAAC,IAAGC,CAAC,CAACN,SAAS,IAAEM,CAAC,CAACN,SAAS,KAAG,CAAC,IAAEM,CAAC,CAACN,SAAS,KAAG,CAAC,EAAC,IAAGP,CAAC,CAACa,CAAC,CAACN,SAAS,CAAC,IAAEM,CAAC,CAACN,SAAS,CAACoC,IAAI,CAAC,CAAC,KAAG,GAAG,EAAC9B,CAAC,CAACN,SAAS,GAAC,CAAC,CAAC,KAAK,IAAGP,CAAC,CAACa,CAAC,CAACN,SAAS,CAAC,IAAEM,CAAC,CAACN,SAAS,CAACoC,IAAI,CAAC,CAAC,KAAG,GAAG,EAAC9B,CAAC,CAACN,SAAS,GAAC,CAAC,CAAC,KAAK,MAAM,IAAIc,KAAK,CAAE,uGAAsG,OAAOR,CAAC,CAACN,SAAU,eAAce,IAAI,CAACC,SAAS,CAACV,CAAC,CAACN,SAAS,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;MAAC,IAAI,CAACqC,IAAI,GAAC/B,CAAC,EAAC,IAAI,CAACgC,MAAM,GAAC,EAAE;IAAA;IAACA,MAAM;IAACD,IAAI;IAACE,GAAGA,CAAClC,CAAC,EAACC,CAAC,EAACK,CAAC,EAAC;MAAC,IAAGN,CAAC,IAAE,IAAI,IAAEC,CAAC,IAAE,IAAI,EAAC;MAAO,IAAGf,CAAC,CAACc,CAAC,CAAC,IAAE,CAACd,CAAC,CAACe,CAAC,CAAC,EAAC;QAAC,IAAGE,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,EAAC;UAAC,IAAGA,CAAC,CAACK,MAAM,EAAC;YAAC,IAAGL,CAAC,CAACmC,IAAI,CAAClB,CAAC,IAAEd,KAAK,CAACC,OAAO,CAACa,CAAC,CAAC,CAAC,EAAC;cAACjB,CAAC,CAACoC,OAAO,CAACnB,CAAC,IAAE;gBAACd,KAAK,CAACC,OAAO,CAACa,CAAC,CAAC,IAAE,IAAI,CAACiB,GAAG,CAAC,GAAGjB,CAAC,CAAC;cAAA,CAAC,CAAC;cAAC;YAAM;YAACjB,CAAC,CAACK,MAAM,IAAEf,CAAC,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEV,CAAC,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,IAAI,CAACkC,GAAG,CAAC,GAAGlC,CAAC,CAAC;UAAA;UAAC;QAAM;QAAC,MAAM,IAAIqC,SAAS,CAAE,oFAAmF3B,IAAI,CAACC,SAAS,CAACX,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,kCAAiCU,IAAI,CAACC,SAAS,CAACV,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,GAAE,CAAC;MAAA,CAAC,MAAK,IAAG,CAACf,CAAC,CAACc,CAAC,CAAC,IAAEd,CAAC,CAACe,CAAC,CAAC,EAAC,MAAM,IAAIoC,SAAS,CAAE,mFAAkF3B,IAAI,CAACC,SAAS,CAACV,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,mCAAkCS,IAAI,CAACC,SAAS,CAACX,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,GAAE,CAAC;MAAC,IAAIa,CAAC,GAAC,CAACb,CAAC;QAACgB,CAAC,GAAC,CAACf,CAAC;MAAC,IAAGX,CAAC,CAACgB,CAAC,CAAC,KAAGA,CAAC,GAACgC,MAAM,CAAChC,CAAC,CAAC,CAAC,EAAChB,CAAC,CAACuB,CAAC,CAAC,IAAEvB,CAAC,CAAC0B,CAAC,CAAC,EAAC;QAAC,IAAG9B,CAAC,CAACoB,CAAC,CAAC,IAAE,CAAClB,CAAC,CAACkB,CAAC,CAAC,IAAE,CAAChB,CAAC,CAACgB,CAAC,CAAC,EAAC,MAAM,IAAI+B,SAAS,CAAE,6GAA4G,OAAO/B,CAAE;AAC5pE,EAAEI,IAAI,CAACC,SAAS,CAACL,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;QAAC,IAAGpB,CAAC,CAAC,IAAI,CAAC+C,MAAM,CAAC,IAAE9B,KAAK,CAACC,OAAO,CAAC,IAAI,CAACmC,IAAI,CAAC,CAAC,CAAC,IAAE1B,CAAC,KAAG,IAAI,CAAC0B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;UAAC,IAAG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAACvB,CAAC,EAAC,IAAI,CAACuB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,IAAErD,CAAC,CAACoB,CAAC,CAAC,EAAC;YAAC,IAAIW,CAAC,GAAC,IAAI,CAACsB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAClC,MAAM,KAAG,CAAC,IAAI,CAAC2B,IAAI,EAAErC,SAAS,IAAE,IAAI,CAACqC,IAAI,CAACrC,SAAS,KAAG,CAAC,CAAC,GAAE,GAAE,IAAI,CAAC4C,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,GAAEjC,CAAE,EAAC,GAACA,CAAC;YAAC,IAAI,CAAC0B,IAAI,CAACL,wBAAwB,KAAGV,CAAC,GAACjC,CAAC,CAACiC,CAAC,EAAC,IAAI,CAACe,IAAI,CAACJ,oBAAoB,CAAC,CAAC,EAACxC,CAAC,CAAC6B,CAAC,CAAC,IAAE,CAACA,CAAC,CAACZ,MAAM,KAAG,IAAI,CAACkC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAACtB,CAAC,CAAC;UAAA;QAAC,CAAC,MAAI;UAAC,IAAI,CAACgB,MAAM,KAAG,IAAI,CAACA,MAAM,GAAC,EAAE,CAAC;UAAC,IAAIhB,CAAC,GAACX,CAAC,KAAG,KAAK,CAAC,IAAE,EAAElB,CAAC,CAACkB,CAAC,CAAC,IAAE,CAACA,CAAC,CAACD,MAAM,CAAC,GAAC,CAACQ,CAAC,EAACG,CAAC,EAACV,CAAC,IAAE,IAAI,CAAC0B,IAAI,CAACL,wBAAwB,GAAC3C,CAAC,CAACsB,CAAC,EAAC,IAAI,CAAC0B,IAAI,CAACJ,oBAAoB,CAAC,GAACtB,CAAC,CAAC,GAAC,CAACO,CAAC,EAACG,CAAC,CAAC;UAAC,IAAI,CAACiB,MAAM,CAACO,IAAI,CAACvB,CAAC,CAAC;QAAA;MAAC,CAAC,MAAK,MAAM3B,CAAC,CAACuB,CAAC,CAAC,IAAEA,CAAC,IAAE,CAAC,GAAC,IAAIwB,SAAS,CAAE,8IAA6I,OAAOrB,CAAE,eAAcN,IAAI,CAACC,SAAS,CAACK,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC,GAAC,IAAIqB,SAAS,CAAE,+IAA8I,OAAOxB,CAAE,eAAcH,IAAI,CAACC,SAAS,CAACE,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,EAAC,CAAC;IAAA;IAAC2B,IAAIA,CAACxC,CAAC,EAACC,CAAC,EAACK,CAAC,EAAC;MAAC,IAAI,CAAC4B,GAAG,CAAClC,CAAC,EAACC,CAAC,EAACK,CAAC,CAAC;IAAA;IAACmC,OAAOA,CAAA,EAAE;MAAC,OAAOtC,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC6B,MAAM,CAAC,IAAE,IAAI,CAACA,MAAM,CAAC5B,MAAM,IAAE,IAAI,CAAC4B,MAAM,GAACnC,CAAC,CAAC,IAAI,CAACmC,MAAM,EAAC;QAACtC,SAAS,EAAC,IAAI,CAACqC,IAAI,CAACrC;MAAS,CAAC,CAAC,EAAC,IAAI,CAACsC,MAAM,IAAE,IAAI,CAACD,IAAI,CAACL,wBAAwB,GAAC,IAAI,CAACM,MAAM,CAAClB,GAAG,CAACf,CAAC,IAAEd,CAAC,CAACc,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAACA,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAAChB,CAAC,CAACgB,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAACgC,IAAI,CAACJ,oBAAoB,CAAC,CAAC,GAAC5B,CAAC,CAAC,GAAC,IAAI,CAACiC,MAAM,IAAE,IAAI;IAAA;IAACS,IAAIA,CAAA,EAAE;MAAC,IAAI,CAACT,MAAM,GAAC,EAAE;IAAA;IAACU,OAAOA,CAAC3C,CAAC,EAAC;MAAC,IAAGG,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,IAAEA,CAAC,CAACK,MAAM;QAAC,IAAGF,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAEV,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAACiC,MAAM,GAAC9B,KAAK,CAACyC,IAAI,CAAC5C,CAAC,CAAC,CAAC,KAAK,MAAM,IAAIS,KAAK,CAAE,0HAAyHC,IAAI,CAACC,SAAS,CAACX,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAE,iFAAgF,CAAC;MAAC,OAAK,IAAI,CAACiC,MAAM,GAAC,EAAE;IAAA;IAACM,IAAIA,CAAA,EAAE;MAAC,OAAOpC,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC6B,MAAM,CAAC,IAAE,IAAI,CAACA,MAAM,CAAC5B,MAAM,GAAC,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC5B,MAAM,GAAC,CAAC,CAAC,GAAC,IAAI;IAAA;EAAC,CAAC;AAAC,SAAOwB,CAAC,IAAIgB,MAAM,EAACnB,CAAC,IAAIoB,QAAQ,EAACrB,CAAC,IAAIsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}