{"ast":null,"code":"/**\n * @name ranges-apply\n * @fileoverview Take an array of string index ranges, delete/replace the string according to them\n * @version 7.0.10\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-apply/}\n */\n\nimport { rMerge as b } from \"ranges-merge\";\nimport w from \"tiny-invariant\";\nvar m = \"7.0.10\";\nvar T = m;\nfunction _(s, n, r) {\n  let t = 0,\n    p = 0;\n  if (arguments.length === 0) throw new Error(\"ranges-apply: [THROW_ID_01] inputs missing!\");\n  if (typeof s != \"string\") throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s, null, 4)}`);\n  if (n && !Array.isArray(n)) throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof n}, equal to: ${JSON.stringify(n, null, 4)}`);\n  if (r && typeof r != \"function\") throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r, null, 4)}`);\n  if (!n?.filter(e => e).length) return s;\n  let i;\n  Array.isArray(n) && Number.isInteger(n[0]) && Number.isInteger(n[1]) ? i = [Array.from(n)] : i = Array.from(n);\n  let f = i.length,\n    c = 0;\n  i.filter(e => e).forEach((e, a) => {\n    if (r && (t = Math.floor(c / f * 10), t !== p && (p = t, r(t))), !Array.isArray(e)) throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(e, null, 4)}, which is ${typeof e}`);\n    if (!Number.isInteger(e[0])) {\n      if (!Number.isInteger(+e[0]) || +e[0] < 0) throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e, null, 0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0], null, 4)}.`);\n      i[a][0] = +i[a][0];\n    }\n    if (!Number.isInteger(e[1])) {\n      if (!Number.isInteger(+e[1]) || +e[1] < 0) throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e, null, 0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1], null, 4)}.`);\n      i[a][1] = +i[a][1];\n    }\n    c += 1;\n  });\n  let o = b(i, {\n    progressFn: e => {\n      r && (t = 10 + Math.floor(e / 10), t !== p && (p = t, r(t)));\n    }\n  });\n  w(o);\n  let u = o.length;\n  if (u > 0) {\n    let e = s.slice(o[u - 1][1]);\n    s = o.reduce((a, $, l, y) => {\n      r && (t = 20 + Math.floor(l / u * 80), t !== p && (p = t, r(t)));\n      let g = l === 0 ? 0 : y[l - 1][1],\n        d = y[l][0];\n      return `${a}${s.slice(g, d)}${y[l][2] || \"\"}`;\n    }, \"\"), s += e;\n  }\n  return s;\n}\nexport { _ as rApply, T as version };","map":{"version":3,"names":["rMerge","b","w","m","T","_","s","n","r","t","p","arguments","length","Error","TypeError","JSON","stringify","Array","isArray","filter","e","i","Number","isInteger","from","f","c","forEach","a","Math","floor","o","progressFn","u","slice","reduce","$","l","y","g","d","rApply","version"],"sources":["/Users/isaacli/Desktop/MCI/dummyshop/node_modules/ranges-apply/dist/ranges-apply.esm.js"],"sourcesContent":["/**\n * @name ranges-apply\n * @fileoverview Take an array of string index ranges, delete/replace the string according to them\n * @version 7.0.10\n * @author Roy Revelt, Codsen Ltd\n * @license MIT\n * {@link https://codsen.com/os/ranges-apply/}\n */\n\nimport{rMerge as b}from\"ranges-merge\";import w from\"tiny-invariant\";var m=\"7.0.10\";var T=m;function _(s,n,r){let t=0,p=0;if(arguments.length===0)throw new Error(\"ranges-apply: [THROW_ID_01] inputs missing!\");if(typeof s!=\"string\")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s,null,4)}`);if(n&&!Array.isArray(n))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof n}, equal to: ${JSON.stringify(n,null,4)}`);if(r&&typeof r!=\"function\")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(!n?.filter(e=>e).length)return s;let i;Array.isArray(n)&&Number.isInteger(n[0])&&Number.isInteger(n[1])?i=[Array.from(n)]:i=Array.from(n);let f=i.length,c=0;i.filter(e=>e).forEach((e,a)=>{if(r&&(t=Math.floor(c/f*10),t!==p&&(p=t,r(t))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${a}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])){if(!Number.isInteger(+e[0])||+e[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e,null,0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}.`);i[a][0]=+i[a][0]}if(!Number.isInteger(e[1])){if(!Number.isInteger(+e[1])||+e[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${a}th element, array ${JSON.stringify(e,null,0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}.`);i[a][1]=+i[a][1]}c+=1});let o=b(i,{progressFn:e=>{r&&(t=10+Math.floor(e/10),t!==p&&(p=t,r(t)))}});w(o);let u=o.length;if(u>0){let e=s.slice(o[u-1][1]);s=o.reduce((a,$,l,y)=>{r&&(t=20+Math.floor(l/u*80),t!==p&&(p=t,r(t)));let g=l===0?0:y[l-1][1],d=y[l][0];return`${a}${s.slice(g,d)}${y[l][2]||\"\"}`},\"\"),s+=e}return s}export{_ as rApply,T as version};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}